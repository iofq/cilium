{{$PIN_TO_LABELLED_NODES := DefaultParam .CL2_PIN_WORKLOADS_TO_LABELLED_NODES false}}

{{$scenario := .scenario}}
{{$instances := .instances}}

{{$runDuration := DefaultParam .runDuration 60}}

apiVersion: batch/v1
kind: Job
metadata:
  name: {{.Name}}
  labels:
    app.kubernetes.io/name: http-perf-client
    index: "{{.Index}}"
spec:
  activeDeadlineSeconds: 600
  template:
    spec:
      {{ if $PIN_TO_LABELLED_NODES }}
      nodeSelector:
        role.scaffolding/http-perf-client: "true"
      {{ end }}
      containers:
      - image: "envoyproxy/nighthawk-dev"
        name: http-perf-client
        command: ["/bin/bash"]
        args:
          - "-c"
          - |
            #!/usr/bin/env bash

            set -x

            # FIXME: https://github.com/envoyproxy/nighthawk/pull/1407
            apt install -y curl

            echo "Starting Nighthawk Client"

            # To get around nighthawk issue of command getting stuck.
            # Disable stdout/err output buffering so we don't truncate the JSON results.
            timeout --kill-after=3 --signal=SIGTERM 90 \
              stdbuf -i0 -o0 -e0 \
                nighthawk_client \
                  -v critical \
                  --output-format prometheus \
                  --no-default-failure-predicates \
                  --label testing \
                  --duration {{$runDuration}} \
                  --rps 65535 \
                  --connections 1024 \
                  --concurrency 2 \
                  --timeout 1 \
                  --request-body-size 16 \
                  http://http-server-{{.Index}}:10000/echo \
              | curl --data-binary @- \
                "http://pushgateway.monitoring:9091/metrics/job/http-benchmark/instance/$(hostname)/server/http-server-{{.Index}}/scenario/{{$scenario}}"
      terminationGracePeriodSeconds: 1
      restartPolicy: Never
  completions: {{$instances}}
  parallelism: {{$instances}}
